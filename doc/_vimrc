" VIM Configuration File
" Description: Optimized for C/C++ development, but useful also for other things.
" Author: Gerhard Gappmeier   https://gist.github.com/rocarvaj/2513367
"

if has("gui_running")
    " colorscheme desert
    set guioptions-=T
	set guifont=Ubuntu\ Mono\ 11
 else
    colorscheme darkblue
endif

colorscheme desert

" Status line
hi StatusLine gui=reverse cterm=reverse
set laststatus=2 " всегда показывать строку состояния 
set statusline=
set statusline+=%-3.3n\  " buffer number
set statusline+=%t\  " filename
set statusline+=%h%m%r%w  " status flags
set statusline+=\[%{strlen(&ft)?&ft:'none'}] " file type
set statusline+=\[FF,FE,TE=%{&fileformat},%{&fileencoding},%{&encoding}\] " file encoding 
set statusline+=%=  " right align remainder
set statusline+=0x%-8B  " character value
set statusline+=%-14(%l,%c%V%)  " line, character
set statusline+=%<%P  " file position

"При смене раскладки сохранить шоткаты http://habrahabr.ru/post/98393/
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0
highlight lCursor guifg=NONE guibg=Cyan

set foldenable " включить фолдинг
set foldmethod=syntax " определять блоки на основе синтаксиса файла
"set foldmethod=indent " определять блоки на основе отступов
set foldcolumn=3 " показать полосу дл¤ управлени¤ сворачиванием
set foldlevel=1 " ѕервый уровень вложенности открыт, остальные закрыты
"set foldopen=all " автоматическое открытие сверток при заходе в них

set fencs=utf-8,cp1251,koi8-r,cp866
syntax on
filetype on
filetype plugin on
filetype indent on

" disable vi compatibility (emulation of old bugs)
set nocompatible
set nowrap                      " don't wrap lines
" wrap lines at 120 chars. 80 is somewaht antiquated with nowadays displays.
set textwidth=120
" turn syntax highlighting on
set t_Co=256
" turn line numbers on
set number
" highlight matching braces
set showmatch
" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */

set shiftwidth=4 " размер отступов (нажатие на << или >>)
set tabstop=4 " ширина табул¤ции
set softtabstop=4 " ширина 'мягкого' таба
set autoindent " ai - включить автоотступы (копируется отступ предыдущей строки)
set cindent " ci - отступы в стиле —
set expandtab " преобразовать табуляцию в пробелы
set smartindent " умные отступы (например, автоотступ после {)
" Для указанных типов файлов отключает замену табов пробелами и меняет ширину отступа
au FileType crontab,fstab,make set noexpandtab tabstop=8 shiftwidth=8
"xml
let g:xml_syntax_folding=1
au FileType xml setlocal foldmethod=syntax

set ignorecase " ics - поиск без учета регистра символов
set smartcase " - если искомое выражени¤ содержит символы в верхнем регистре - ищет с учетом регистра, иначе - без учета
"set nohlsearch " (не)подсветка результатов поиска (после того, как поиск закончен и закрыт)
set hlsearch
set incsearch " поиск фрагмента по мере его набора

set backspace=indent,eol,start " backspace обрабатывает отступы, концы строк
set browsedir=current
set history=128 " хранить больше истории команд
set undolevels=2048 " хранить историю изменений числом N
set clipboard=unnamed " во избежание лишней путаницы использовать системный буфер обмена вместо буфера Vim

" set wrap " (no)wrap - динамический (не)перенос длинных строк
set linebreak " переносить целые слова
set hidden " не выгружать буфер когда переключаешьс¤ на другой
set showcmd " показывать незавершенные команды в статусбаре (автодополнение ввода)
set showmatch " показывать первую парную скобку после ввода второй
set autoread " перечитывать измененные файлы автоматически
"set spell spelllang=ru_ru,en_us "проверка орфографии
set nospell
set nu

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler
" Set the command window height to 2 lines, to avoid many cases of having to
" "press <Enter> to continue"
set cmdheight=2
 
" Enhanced keyboard mappings
"
" in normal mode F2 will save the file
nmap <F2> :w<CR>
" in insert mode F2 will exit insert, save, enters insert again
imap <F2> <ESC>:w<CR>i
" switch between header/source with F4
map <F4> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>
" recreate tags file with F5
map <F5> :!ctags -R –c++-kinds=+p –fields=+iaS –extra=+q .<CR>                      " http://vim.wikia.com/wiki/C%2B%2B_code_completion
" http://superuser.com/questions/692548/go-to-lines-matched-by-i-command-to-display-lines-with-word-under-the-cursor 
map <F6> [I:let nr = input("Which one: ")<Bar>exe "normal " . nr ."[\t"<CR>

map <F7> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>
" goto definition with F12
" map <F12> <C-]>
map <F12> :ts<CR>
" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L> :nohl<CR><C-L>
nnoremap * *N
" nnoremap <C-F8> :nohlsearch<CR>  " http://habrahabr.ru/post/131951/
noremap <A-j> gT " Alt-j to move to the tab to the left
noremap <A-k> gt " Alt-k to move to the tab to the right
nnoremap <space> za " открыть/закрыть складку

" clang-format
" https://clang.llvm.org/docs/ClangFormat.html 
map <C-K> :pyf /usr/share/vim/addons/syntax/clang-format.py<cr>
imap <C-K> <c-o>:pyf  /usr/share/vim/addons/syntax/clang-format.py<cr>

