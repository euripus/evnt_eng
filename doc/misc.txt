static polymorphism: https://www.reddit.com/r/cpp/comments/8po138/question_about_static_polymorphism_using/
                     https://habr.com/ru/post/210894/

boost::property_tree: https://gist.github.com/mloskot/1509935
                      https://stackoverflow.com/questions/17124652/how-can-i-parse-json-arrays-with-c-boost

GameObj
    GetComponent<TypeID>()
    AddComponent<TypeID>(component_ptr)
    SendMsg()
    
Component
    GetGameObjPtr()
    SendMsg()
    
SceneNode
    parsingFunc
    factoryFunc
    renderFunc
    
Resource
    get_type()
    add_ref()
    sub_ref()
    
Network

IObject
    IDeviceObject
        ITextureView
            ITextureViewGL            
template<typename Base>
class RefCountedObject : public Base
    class ObjectBase : public RefCountedObject<BaseInterface>
        class DeviceObjectBase : public ObjectBase<BaseInterface>
            class TextureViewBase : public DeviceObjectBase<BaseInterface, RenderDeviceImplType, TextureViewDesc>
                class TextureViewGLImpl final : public TextureViewBase<ITextureViewGL, RenderDeviceGLImpl>
                
                
Mapping types
    Direct Mapping
        IObject
            read(stream s)=0;
            write(stream s)=0;
        ConcrObject : public IObject
            read(stream s)
            write(stream s)
    Indirect Mapping
        IObject
        ConcrObject : public IObject
        IMapper
            static getMapper(object_type)
            read(stream s) = 0;
            write(streams) = 0;
        ConcrObjectMapper
            read(stream s)
            write(stream s)


auto obj = GameObjMgr::Create(   );

auto pos = SceneMgr.CreatePosition(   );
SceneMgr.Root().AddNode(pos);
obj->AddComponent(pos);

auto msh = ResourceMgr.Create( );
msh.AddTexture();
msh.AddMesh();
msh.AddController();

obj->AddComponent(std::move(msh));
obj->AddComponent( NetworkMgr.Create());

//============
auto render_que = cam.GetRenderQue(SceneMgr.Root());
cam.FrameGraph().Render(render_que);

//============
// Main loop
app.process_input()
app.update()
    win.update()
        glfwPollEvent()
    app_state.update()
app.draw()
app.swap()
