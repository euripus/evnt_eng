GL extensions: GL_ARB_texture_view, GL_ARB_framebuffer_object


https://software.intel.com/ru-ru/articles/introduction-to-resource-binding-in-microsoft-directx-12
https://stackoverflow.com/questions/46493782/directx-11-what-is-a-shader-resource-view

static polymorphism: https://www.reddit.com/r/cpp/comments/8po138/question_about_static_polymorphism_using/
                     https://habr.com/ru/post/210894/



GameObj
    GetComponent<TypeID>()
    AddComponent<TypeID>(component_ptr)
    SendMsg()
    
Component
    GetGameObjPtr()
    SendMsg()
    
SceneNode
    parsingFunc
    factoryFunc
    renderFunc
    
Resource
    get_type()
    add_ref()
    sub_ref()
    
Network




auto obj = GameObjMgr::Create(   );

auto pos = SceneMgr.CreatePosition(   );
SceneMgr.Root().AddNode(pos);
obj->AddComponent(pos);

auto msh = ResourceMgr.Create( );
msh.AddTexture();
msh.AddMesh();
msh.AddController();

obj->AddComponent(std::move(msh));
obj->AddComponent( NetworkMgr.Create());

//============
auto render_que = cam.GetRenderQue(SceneMgr.Root());
cam.FrameGraph().Render(render_que);
